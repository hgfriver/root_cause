import numpy as npimport pandas as pdimport matplotlib.pyplot as pltimport mathimport randomclass GenerateNoise:    number_of_data = 500    x_left = 0    x_right = 100    degree_of_radom = 10        def __init__(self):        pass            def generate(self, types):                x = np.linspace(self.x_left,self.x_right,self.number_of_data) #在-5到5之間均勻產生200個點                        #yBASE ===========================================================        e = 2.414        a = 1/(1+e**(-(x-30))) - 1/(1+e**(-(x-80)))        b = 1/(1+e**(-(x-15))) - 1/(1+e**(-(x-30)))        k = 1/(1+e**(-(x-65))) - 1/(1+e**(-(x-80)))        c =  1/(1+e**(-((0.2*(x+45))-15))) - 1/(1+e**(-((0.2*(x+45))-20)))        y = a + 0.5*b  -0.5*k        y = y*400        #yA = y + self.degree_of_radom*np.random.rand(self.number_of_data)        #yBASE = yA                                                                        if types == 1:            #yPositiveSmallPeak ===========================================================            a = random.randint(0, self.x_right - self.x_left-5 )            yPEAK = 1/(1+e**(-(x-a))) - 1/(1+e**(-(x-(a+3))))            yPEAK = yPEAK *20            #==================================                        elif types == 2:            #yNegativeSmallPeak ===========================================================            a = random.randint(0, self.x_right - self.x_left-5 )            yPEAK = 1/(1+e**(-(x-a))) - 1/(1+e**(-(x-(a+3))))            yPEAK = -yPEAK *20            #==================================                        elif types == 3:            #yPositiveLongPeak ===========================================================            a = random.randint(0, self.x_right - self.x_left-23 )            yPEAK = 1/(1+e**(-(x-a))) - 1/(1+e**(-(x-(a+20))))            yPEAK = yPEAK *10            #==================================                        elif types == 4:            #yNegativeLongPeak ===========================================================            a = random.randint(0, self.x_right - self.x_left-23 )            yPEAK = 1/(1+e**(-(x-a))) - 1/(1+e**(-(x-(a+20))))            yPEAK = -yPEAK *10            #==================================                        elif types == 5:            #yPositiveHorizontal ===========================================================            yPEAK = 0*x +10            #==================================                        elif types == 6:            #yNegativeHorizontal  ===========================================================            yPEAK = 0*x -10            #==================================                         #yFINAL = yBASE + yPEAK                        # ==============================================================        #plt.scatter(x,yBASE)        plt.scatter(x,yPEAK)        #plt.scatter(x,yFINAL)                                """plt.show()        """                    #a = np.asarray([x,yBASE])        new_a = np.transpose(a)        #np.savetxt('sample.csv', new_a, delimiter=",", fmt='%f')                        return yPEAK            """if __name__ == "__main__":        a = GenerateNoise()        ans = a.generate(4) #return x,yA,yB,yC,yD,yE            print(ans)"""